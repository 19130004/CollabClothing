// <auto-generated />
using System;
using CollabClothing.WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CollabClothing.WebApp.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CollabClothing.WebApp.Models.Action", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameAction")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Banner", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameBanner")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TypeBannerId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("TypeBannerId");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.BannerType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameBannerType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("BannerType");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Brand", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameBrand")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = "01",
                            Images = "adidas.png",
                            Info = "Brand Adidas",
                            NameBrand = "Adidas",
                            Slug = "/adidas"
                        },
                        new
                        {
                            Id = "02",
                            Images = "nike.png",
                            Info = "Brand Nike",
                            NameBrand = "Nike",
                            Slug = "/nike"
                        });
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Cart", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsShowWeb")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("NameCategory")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = "10001",
                            Icon = "men",
                            IsShowWeb = true,
                            Level = 1,
                            NameCategory = "Men",
                            ParentId = "null",
                            Slug = "/men"
                        },
                        new
                        {
                            Id = "10002",
                            Icon = "women",
                            IsShowWeb = true,
                            Level = 1,
                            NameCategory = "Women",
                            ParentId = "null",
                            Slug = "/women"
                        },
                        new
                        {
                            Id = "20001",
                            Icon = "men",
                            IsShowWeb = true,
                            Level = 2,
                            NameCategory = "T-Shirt",
                            ParentId = "10001",
                            Slug = "/men/t-shirt"
                        },
                        new
                        {
                            Id = "20002",
                            Icon = "women",
                            IsShowWeb = true,
                            Level = 2,
                            NameCategory = "T-Shirt",
                            ParentId = "10002",
                            Slug = "/women/t-shirt"
                        });
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Color", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameColor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TopicId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Function", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameFunction")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SortOrder")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShipAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ShipEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ShipPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Permission", b =>
                {
                    b.Property<string>("ActionId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FunctionId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasIndex("ActionId");

                    b.HasIndex("FunctionId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BrandId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Installment")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceCurrent")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("PriceOld")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SaleOff")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SoldOut")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = "01",
                            BrandId = "01",
                            Description = "",
                            Installment = 0,
                            PriceCurrent = 300000m,
                            PriceOld = 450000m,
                            ProductName = "Ao thun nam ",
                            SaleOff = 20,
                            Slug = "/",
                            SoldOut = false
                        },
                        new
                        {
                            Id = "02",
                            BrandId = "02",
                            Description = "",
                            Installment = 0,
                            PriceCurrent = 400000m,
                            PriceOld = 450000m,
                            ProductName = "Ao thun nam 2",
                            SaleOff = 20,
                            Slug = "/",
                            SoldOut = true
                        },
                        new
                        {
                            Id = "03",
                            BrandId = "01",
                            Description = "",
                            Installment = 0,
                            PriceCurrent = 200000m,
                            PriceOld = 350000m,
                            ProductName = "Ao thun nu",
                            SaleOff = 20,
                            Slug = "/",
                            SoldOut = false
                        },
                        new
                        {
                            Id = "04",
                            BrandId = "02",
                            Description = "",
                            Installment = 0,
                            PriceCurrent = 200000m,
                            PriceOld = 320000m,
                            ProductName = "Ao thun nu 1",
                            SaleOff = 20,
                            Slug = "/",
                            SoldOut = false
                        });
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.ProductDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDetail");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.ProductImage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Alt")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Path")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.ProductMapCategory", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ProductId", "CategoryId")
                        .HasName("PK__ProductM__159C556D63F46B0A");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductMapCategory");

                    b.HasData(
                        new
                        {
                            ProductId = "01",
                            CategoryId = "20001"
                        },
                        new
                        {
                            ProductId = "02",
                            CategoryId = "20002"
                        });
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.ProductMapSize", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SizeId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ProductId", "SizeId")
                        .HasName("PK__ProductM__0C37165AA0FEF2ED");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductMapSize");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Promotion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NamePromotion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Promotion");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.PromotionDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Info")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("More")
                        .HasColumnType("bit");

                    b.Property<bool>("OnlinePromotion")
                        .HasColumnType("bit");

                    b.Property<string>("PromotionId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionDetail");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Size", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameSize")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.SizeMapColor", b =>
                {
                    b.Property<string>("ColorId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sizeid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasIndex("ColorId");

                    b.HasIndex("Sizeid");

                    b.ToTable("SizeMapColor");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.SystemActivity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ClientIp")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ClientIP");

                    b.Property<string>("FunctionId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("UserId");

                    b.ToTable("SystemActivity");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Topic", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameTopic")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.UserRole", b =>
                {
                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Banner", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.BannerType", "TypeBanner")
                        .WithMany("Banners")
                        .HasForeignKey("TypeBannerId")
                        .HasConstraintName("fk_bannertype_banner")
                        .IsRequired();

                    b.Navigation("TypeBanner");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Cart", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_cart")
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Contact", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Topic", "Topic")
                        .WithMany("Contacts")
                        .HasForeignKey("TopicId")
                        .HasConstraintName("fk_topic_contact")
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Order", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_order")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.OrderDetail", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_order_orderdetails")
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Permission", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .HasConstraintName("fk_action_per")
                        .IsRequired();

                    b.HasOne("CollabClothing.WebApp.Models.Function", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("fk_func_per")
                        .IsRequired();

                    b.HasOne("CollabClothing.WebApp.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_role_per")
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Function");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Product", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("fk_brand_product")
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.ProductDetail", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_productDetails")
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.ProductImage", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_productImage")
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.ProductMapCategory", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Category", "Category")
                        .WithMany("ProductMapCategories")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_cat_productmapcat")
                        .IsRequired();

                    b.HasOne("CollabClothing.WebApp.Models.Product", "Product")
                        .WithMany("ProductMapCategories")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_productMapCat")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.ProductMapSize", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Product", "Product")
                        .WithMany("ProductMapSizes")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_size")
                        .IsRequired();

                    b.HasOne("CollabClothing.WebApp.Models.Size", "Size")
                        .WithMany("ProductMapSizes")
                        .HasForeignKey("SizeId")
                        .HasConstraintName("fk_size_product")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Promotion", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Product", "Product")
                        .WithMany("Promotions")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_promotion")
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.PromotionDetail", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Promotion", "Promotion")
                        .WithMany("PromotionDetails")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("fk_promo_promodetail")
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.SizeMapColor", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .HasConstraintName("fk_color_size")
                        .IsRequired();

                    b.HasOne("CollabClothing.WebApp.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("Sizeid")
                        .HasConstraintName("fk_size_color")
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.SystemActivity", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Function", "Function")
                        .WithMany("SystemActivities")
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("fk_func_sys")
                        .IsRequired();

                    b.HasOne("CollabClothing.WebApp.Models.User", "User")
                        .WithMany("SystemActivities")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_sys")
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.UserRole", b =>
                {
                    b.HasOne("CollabClothing.WebApp.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_role_user")
                        .IsRequired();

                    b.HasOne("CollabClothing.WebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_role")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.BannerType", b =>
                {
                    b.Navigation("Banners");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Category", b =>
                {
                    b.Navigation("ProductMapCategories");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Function", b =>
                {
                    b.Navigation("SystemActivities");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("ProductDetails");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductMapCategories");

                    b.Navigation("ProductMapSizes");

                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Promotion", b =>
                {
                    b.Navigation("PromotionDetails");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Size", b =>
                {
                    b.Navigation("ProductMapSizes");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.Topic", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("CollabClothing.WebApp.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("SystemActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
